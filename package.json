{
  "name": "vscode-dired-fork",
  "displayName": "vscode-dired-fork",
  "description": "Forked dired(File Manager) for VSCode, like Emacs",
  "version": "0.1.3",
  "publisher": "crimair",
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/crimair/vscode-dired-fork"
  },
  "bugs": {
    "url": "https://github.com/crimair/vscode-dired-fork/issues"
  },
  "engines": {
    "vscode": "^1.65.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "filer",
    "dired"
  ],
  "activationEvents": [
    "onCommand:extension.dired.open"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "extension.dired.open",
        "title": "Open dired buffer"
      },
      {
        "command": "extension.dired.unselectAll",
        "title": "Unselect All Marked Items"
      },
      {
        "command": "extension.dired.pathLevelUp",
        "title": "Remove one path level (for autocompletedInputBox)"
      },
      {
        "command": "extension.dired.toggleSort",
        "title": "Toggle Sort Method"
      }
    ],
    "keybindings": [
      {
        "key": "s",
        "command": "extension.dired.toggleSort",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": ".",
        "command": "extension.dired.toggleDotFiles",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "ctrl+x f",
        "command": "extension.dired.open",
        "when": "editorTextFocus && !inDebugRepl"
      },
      {
        "key": "enter",
        "command": "extension.dired.enter",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "shift+=",
        "command": "extension.dired.createDir",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "ctrl+x =",
        "command": "extension.dired.createFile",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "shift+n",
        "command": "extension.dired.createFile",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "shift+r",
        "command": "extension.dired.rename",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "shift+d",
        "command": "extension.dired.delete",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "shift+c",
        "command": "extension.dired.copy",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "shift+b",
        "command": "extension.dired.goUpDir",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "m",
        "command": "extension.dired.select",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "u",
        "command": "extension.dired.unselect",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "shift+u",
        "command": "extension.dired.unselectAll",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "g",
        "command": "extension.dired.refresh",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "q",
        "command": "extension.dired.close",
        "when": "dired.open && editorLangId == dired && editorTextFocus && !findWidgetVisible && !inQuickOpen && !(vim.mode == 'CommandlineInProgress')"
      },
      {
        "key": "ctrl+h",
        "command": "extension.dired.pathLevelUp",
        "when": "autocompletedInputBox.active"
      }
    ],
    "languages": [
      {
        "id": "dired",
        "extensions": [
          ""
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "dired",
        "scopeName": "source.dired",
        "path": "./dired.tmLanguage.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "VSCode Dired",
      "properties": {
        "dired.fixed_window": {
          "type": "boolean",
          "default": "false",
          "description": "Open dired in the same tab or another tab."
        },
        "dired.ask_directory": {
          "type": "boolean",
          "default": "true",
          "description": "Ask directory on opening dired."
        },
        "dired.useQuickPickInput": {
          "type": "boolean",
          "default": false,
          "description": "Enable Quick Pick based input with path completion for commands like open, rename, and copy."
        },
        "dired.setInitialPathInInput": {
          "type": "boolean",
          "default": false,
          "description": "Set the current item's path as the initial value in the input box for rename and copy commands."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.11.17",
    "@types/vscode": "^1.65.0",
    "@typescript-eslint/eslint-plugin": "^5.47.0",
    "@typescript-eslint/parser": "^5.47.0",
    "eslint": "^8.30.0",
    "glob": "^8.0.3",
    "mocha": "^10.2.0",
    "typescript": "^4.9.4",
    "@vscode/test-electron": "^2.3.4"
  },
  "dependencies": {
    "mkdirp": "^1.0.4",
    "stat-mode": "^1.0.0"
  },
  "preview": true
}
